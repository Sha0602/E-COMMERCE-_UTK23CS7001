{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from '../constants/userConstants';\n\n// userLoginReducer for users\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      };\n\n    // On success\n    // userInfo will contain data as a payload\n    // loading will be done, so false\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    // On Logout\n    case USER_LOGOUT:\n      return {};\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};\n// userRegisterReducer for users\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true\n      };\n\n    // On success\n    // userInfo will contain data as a payload\n    // loading will be done, so false\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};\n// userDetailsReducer for users\nexport const userDetailsReducer = (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n\n    // On success\n    // user will contain data as a payload\n    // loading will be done, so false\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case USER_DETAILS_RESET:\n      return {\n        user: {}\n      };\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};\n// userUpdateProfileReducer for users\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_UPDATE_PROFILE_REQUEST:\n      return {\n        loading: true\n      };\n\n    // On success\n    // userInfo will contain data as a payload\n    // loading will be done, so false\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    // Then reset\n    case USER_UPDATE_PROFILE_RESET:\n      return {};\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};\n// userListReducer for admin users\nexport const userListReducer = (state = {\n  users: []\n}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_LIST_REQUEST:\n      return {\n        loading: true\n      };\n\n    // On success\n    // users will contain data as a payload\n    // loading will be done, so false\n    case USER_LIST_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case USER_LIST_RESET:\n      return {\n        users: []\n      };\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};\n// userDeleteReducer for admin users\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n\n    // On success\n    // loading will be done, so false\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};\n// userUpdateReducer for admin users\nexport const userUpdateReducer = (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    // On success\n    // loading will be done, so false\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case USER_UPDATE_RESET:\n      return {\n        user: {}\n      };\n\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","userLoginReducer","state","action","type","loading","userInfo","payload","error","userRegisterReducer","userDetailsReducer","user","userUpdateProfileReducer","success","userListReducer","users","userDeleteReducer","userUpdateReducer"],"sources":["C:/Users/badit/ECOMNEW/react-complete-e-commerce/frontend/src/reducers/userReducers.js"],"sourcesContent":["import {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_UPDATE_PROFILE_RESET,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n\tUSER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n// userLoginReducer for users\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LOGIN_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LOGIN_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// On Logout\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userRegisterReducer for users\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_REGISTER_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_REGISTER_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_REGISTER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userDetailsReducer for users\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_DETAILS_REQUEST:\r\n\t\t\treturn { ...state, loading: true }\r\n\r\n\t\t// On success\r\n\t\t// user will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, user: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DETAILS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_DETAILS_RESET:\r\n\t\t\treturn { user: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userUpdateProfileReducer for users\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_UPDATE_PROFILE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_PROFILE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_PROFILE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// Then reset\r\n\t\tcase USER_UPDATE_PROFILE_RESET:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userListReducer for admin users\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_LIST_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// users will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LIST_SUCCESS:\r\n\t\t\treturn { loading: false, users: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_LIST_RESET:\r\n\t\t\treturn { users: [] }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userDeleteReducer for admin users\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_DELETE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DELETE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userUpdateReducer for admin users\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\tcase USER_UPDATE_RESET:\r\n\t\t\treturn { user: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}